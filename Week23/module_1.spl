//process_manager
alias functionNum R1;
alias currentPID R2;

//get_pcb entry
if (functionNum==1)then
  alias index R3;
  index=1;
  while(index<=15)do
    if ([PROCESS_TABLE + (index*16) + 4]==TERMINATED) then
      break;
    endif;
    index=index+1;
  endwhile;
  if (15<index) then
    R0=-1;
    return;
  endif;
  [PROCESS_TABLE + index*16 + 1]=index;
  [PROCESS_TABLE + index*16 + 4]=ALLOCATED;
  [PROCESS_TABLE + index*16 + 14]=PAGE_TABLE_BASE + index*20;
  [PROCESS_TABLE + index*16 + 15]=10;
  R0=index;
  return;
endif;

//free_user_area_page
if(functionNum==2) then
    alias userarea R3;
    userarea = [PROCESS_TABLE+currentPID*16+11];
    multipush(R0,R1,R2,R3,R4,R5,R6);
    R1=2;
    R2=userarea;
    call MOD_2;
    multipop(R0,R1,R2,R3,R4,R5,R6);
    alias pprt R3;
    alias counter R4;
    pprt=[PROCESS_TABLE + currentPID*16 +11]*512 +(512-16);
    counter=0;
    while(counter<=7)do
      if([pprt+2*counter]==1)then
        alias semti R5;
        semti=[pprt + 2*counter+1];
        multipush(R1,R2,R3,R4,R5,R6);
        R1=7;
        R2=currentPID;
        R3=semti;
        call MOD_0;
        multipop(R1,R2,R3,R4,R5,R6);
      endif;
      counter=counter+1;
    endwhile;
    return;
endif;

//ExitProcess
if(functionNum==3) then
    if ([PROCESS_TABLE+currentPID*16+9]!=9) then
      alias counter R3;
      counter=1;
      while(counter<=15)do
        if([PROCESS_TABLE+counter*16+4]==WAIT_PROCESS && [PROCESS_TABLE+counter*16+5]==currentPID)then
          [PROCESS_TABLE+counter*16+4]=READY;
        endif;
        if([PROCESS_TABLE+counter*16+2]==currentPID)then
          [PROCESS_TABLE+counter*16+2]=-1;
        endif;
        counter=counter+1;
      endwhile;
    endif;
    
    currentPID = [SYSTEM_STATUS_TABLE+1];
    multipush(R0,R1,R2,R3,R4,R5,R6);
    R1=4;
    R2=currentPID;
    call MOD_1;
    multipop(R0,R1,R2,R3,R4,R5,R6);
    multipush(R0,R1,R2,R3,R4,R5,R6);
    R1=2;
    R2=currentPID;
    call MOD_1;
    multipop(R0,R1,R2,R3,R4,R5,R6);
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16 + 4]=TERMINATED;
    return;
endif;


//FreePageTable
if(functionNum==4) then
    alias ptbr R5;
    ptbr = PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20;
    [ptbr + 0]=-1;
    [ptbr + 1]="0000";
    [ptbr + 2]=-1;
    [ptbr + 3]="0000";
  alias temp R6;
  alias temp2 R7;
  temp=4;

  while(temp<=18) do
    temp2 = [ptbr+temp+1];
      if(temp2=="0100" || temp2=="0110") then
      multipush(R0,R1,R2,R3,R4,R5,R6);
      R1=2;
      R2=[PTBR + temp];
      call MOD_2;
      multipop(R0,R1,R2,R3,R4,R5,R6);
      endif;
    temp=temp+2;
  endwhile;

  multipush(R0,R1,R2,R3,R4,R5,R6);
  alias DiskTable R5;
  DiskTable=DISK_MAP_TABLE + (R2)*10;
  alias counter R6;
  counter=2;
  while (counter<=9) do
    if ([DiskTable + counter]!=-1) then
      multipush(R0,R1,R2,R3,R4,R5,R6);
      R1=4;
      R3=R2;
      R2=[DiskTable + counter];
      call MOD_2;
      multipop(R0,R1,R2,R3,R4,R5,R6);
    endif;
    if (counter==3)then
      counter=7;
    endif;
    counter=counter+1;
  endwhile;
  multipop(R0,R1,R2,R3,R4,R5,R6);
return;
endif;

return;






