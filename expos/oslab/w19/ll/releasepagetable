
// Free Page Table(pid)	/////////////////////////////////////////////////////
else if(functionNumber == 4) then

	alias ptbr R4;
	alias i R5;
	ptbr = [(PROCESS_TABLE + 16*currentPID) + 14];
	
	// invalidate the page table entries for the library pages
	[ptbr+0] = -1;
	[ptbr+1] = "0000";
	[ptbr+2] = -1;
	[ptbr+3] = "0000";

	i = 4;

	//heap and stack entries in the disk map table of the process with given PID
	while(i < 20) do
		
		if([ptbr+i+1] == "0100" || [ptbr+i+1] == "0110") then
			//invoke release block(block_number,pid)==>NIL/////////////
			multipush(R0,R1,R2,R3,R4,R5);
			R1 = 2;
			R2 = [ptbr + i];
			call MOD_2; 
			multipop(R0,R1,R2,R3,R4,R5);
			////////////////////////////////////////////////////////////
		endif;
		i=i+2;
	endwhile;

	//Invalidate all the entries of the disk map table
	multipush(R0,R1,R2,R3,R4,R5);
	alias DiskTable R5;
	DiskTable = DISK_MAP_TABLE + (currentPID)*10;
	alias counter R6;
	counter = 2;
	while (counter<=9) do
		if ([DiskTable + counter]!=-1) then
			//release block number(block number, pid)==>pid////////////////
			multipush(R0,R1,R2,R3,R4,R5,R6);
			R1=4;
			R3=R2;
			R2=[DiskTable + counter];
			call MOD_2;
			multipop(R0,R1,R2,R3,R4,R5,R6);
			////////////////////////////////////////////////////////////////
		endif;
		if (counter==3)then
		  	counter=7;
		endif;
		counter=counter+1;
	endwhile;
	multipop(R0,R1,R2,R3,R4,R5);