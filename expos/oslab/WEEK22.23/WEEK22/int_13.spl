//interrupt 13 semget,semrelease
alias SystemCallNum R1;
alias userSP R2;
userSP=SP;
alias currentPID R3;
currentPID=[SYSTEM_STATUS_TABLE+1];
//print("hello");
SystemCallNum = [([PTBR + 2 * ((userSP - 5)/ 512)]*512)+(userSP - 5) % 512];
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11]*512 -1;

alias retval R4;
retval = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
//print(SystemCallNum);
//semget system call
//print("enter");
if (SystemCallNum==17)then
	[PROCESS_TABLE + currentPID*16 + 9] = 17;
	alias pprt R5;
	pprt=[PROCESS_TABLE + currentPID*16 +11]*512 +(512-16);
	alias counter R6;
	counter=0;
	while([pprt + 2*counter]!=-1 && counter<=7)do
		counter=counter+1;
	endwhile;
	if (counter>7)then
		[retval]=-1;
	else
		[pprt+counter]=1;
		multipush(R1,R2,R3,R4,R5,R6);
		R1=6;
		R2=currentPID;
		call MOD_0;
		multipop(R1,R2,R3,R4,R5,R6);
		if (R0==-1)then
			[retval]=-2;
		else
			[pprt+counter+1]=R0;
			[retval]=counter;
		endif;
	endif;
endif;

//semrelease systemcall

if (SystemCallNum==18)then
	[PROCESS_TABLE + currentPID*16 + 9] = 18;
	alias pprt R5;
	pprt=[PROCESS_TABLE + currentPID*16 +11]*512 +(512-16);
	alias semid R6;
	semid=[([PTBR + 2 * ((userSP - 4)/ 512)]*512)+(userSP - 4) % 512];
	alias semti R7;
	if (semid<0 || semid>7 || [pprt+2*semid]!=1)then
		[retval]=-1;
	else
		semti=[pprt+2*semid +1];
		multipush(R1,R2,R3,R4,R5,R6,R7);
		R1=7;
		R2=currentPID;
		R3=semti;
		call MOD_0;
		multipush(R1,R2,R3,R4,R5,R6,R7);
		[pprt+2*semid]=-1;
		[retval]=0;
	endif;
endif;

SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
//print("exit");
ireturn;
