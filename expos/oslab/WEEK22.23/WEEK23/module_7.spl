loadi(16,29);
loadi(17,30);
loadi(4, 17);
loadi(5, 18);
loadi(63,13);
loadi(64,14);
loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2, 15);
loadi(3, 16);

//loadi(84,69);

//console-interrupt-handler
loadi(8,21);
loadi(9,22);

//Interrupt 4 :Create,delete
loadi(10, 23);
loadi(11, 24);

loadi(28,41);	//Interrupt_13:Semget,Semrelease
loadi(29,42);

loadi(30,43);	//Interrupt 14:SemLock,SemUnLock
loadi(31,44);


loadi(24,37);	//interrupt 11 Routine: Getpid, Getppid, Wait, Signal
loadi(25,38);

loadi(32,45);		//Interrupt 15 Routine: Shutdown
loadi(33,46);

loadi(18,31);	//interrupt_6=fork
loadi(19,32);

//interrupt-6
loadi(14,27);
loadi(15,28);

loadi(6,19);  //disk interrupt
loadi(7,20);


loadi(40,53); //mod 0
loadi(41,54);

loadi(48,61); //mod 4
loadi(49,62);

loadi(20,33); //exec system call(int-9)
loadi(21,34);

loadi(42,55); //mod 1
loadi(43,56);

loadi(44,57); //mod2
loadi(45,58);

loadi(59,3); //inode
loadi(60,4);

loadi(61,2); //disk free list

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;
//breakpoint;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";


//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

[DISK_MAP_TABLE +1*10 +2]=78;
[DISK_MAP_TABLE +1*10 +3]=79;


//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[DISK_MAP_TABLE +1*10 +4]=65;
[DISK_MAP_TABLE +1*10 +5]=66;
[DISK_MAP_TABLE +1*10 +6]=-1;
[DISK_MAP_TABLE +1*10 +7]=-1;

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[DISK_MAP_TABLE +1*10 +8]=76;
[DISK_MAP_TABLE +1*10 +9]=77;

[76*512] = [65 * 512 + 1];

[PROCESS_TABLE + 1*16 + 11] = 80;
[PROCESS_TABLE + 1*16 +12] = 0;
[PROCESS_TABLE + 1*16 +13] = 8*512;
[PROCESS_TABLE + 1*16 +14] = PTBR; 
[PROCESS_TABLE + 1*16 +15] = PTLR;
[PROCESS_TABLE + 1*16 +1] = 1;
[PROCESS_TABLE + 1*16 +3] = 1;
[PROCESS_TABLE + 1*16 +4] = CREATED;
//breakpoint;


[PROCESS_TABLE + 2*16 +4] = TERMINATED;
[PROCESS_TABLE + 3*16 +4] = TERMINATED;
[PROCESS_TABLE + 4*16 +4] = TERMINATED;
[PROCESS_TABLE + 5*16 +4] = TERMINATED;
[PROCESS_TABLE + 6*16 +4] = TERMINATED;
[PROCESS_TABLE + 7*16 +4] = TERMINATED;
[PROCESS_TABLE + 8*16 +4] = TERMINATED;
[PROCESS_TABLE + 9*16 +4] = TERMINATED;
[PROCESS_TABLE + 10*16 +4] = TERMINATED;
[PROCESS_TABLE + 11*16 +4] = TERMINATED;
[PROCESS_TABLE + 12*16 +4] = TERMINATED;
[PROCESS_TABLE + 13*16 +4] = TERMINATED;
[PROCESS_TABLE + 14*16 +4] = TERMINATED;
[PROCESS_TABLE + 15*16 +4] = TERMINATED;

[TERMINAL_STATUS_TABLE + 0] = 0;
[DISK_STATUS_TABLE]=0;
//breakpoint;

multipush(R0,R1);

alias count R0;
alias temp R1;
count=0;
temp=0;

while(temp<128) do 
 if(temp<83) then
  [MEMORY_FREE_LIST+temp]=1;
 else
  [MEMORY_FREE_LIST+temp]=0;
  count=count+1;
 endif;
 temp=temp+1;
endwhile;




[SYSTEM_STATUS_TABLE+3]=0;
[SYSTEM_STATUS_TABLE+2]=count;

multipop(R0,R1);

multipush(R0,R1);
alias preProcesstable R0;
alias counter R1;
preProcesstable=([PROCESS_TABLE + 1*16 +11]*512) +512-16;
counter=0;
while(counter<=7)do
	[preProcesstable+2*counter]=-1;
	[preProcesstable+2*counter+1]=-1;
	counter=counter+1;
endwhile;

counter=0;
while(counter<MAX_SEM_COUNT)do
	[SEMAPHORE_TABLE +counter*4+0]=-1;
	[SEMAPHORE_TABLE +counter*4+1]=0;
	counter=counter+1;
endwhile;

//initialising the file status table by setting the LockingPID and OpenFileCount to -1 for all entries
counter = 0;
while(counter < 4 * MAX_FILE_NUM) do
    [FILE_STATUS_TABLE + counter] = -1;
    counter = counter + 1;
endwhile;


//initialisng BufferTable by setting BlockNumber and LockingPID fields to -1 and DirtyBit to 0
counter = 0;
while(counter < MAX_BUFFER) do
    [BUFFER_TABLE + 4 * counter] = -1;          //BlockNumber
    [BUFFER_TABLE + 4 * counter + 1] = 0;       //DirtyBit
    [BUFFER_TABLE + 4 * counter + 2] = -1;      //LockingPID
    [BUFFER_TABLE + 4 * counter + 3] = -1;      //Unused
    counter = counter + 1;
endwhile;
multipop(R0,R1);
return;
